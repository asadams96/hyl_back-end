# Nom de l'application
spring.application.name=item-api

# Adresse d'enregistrement d'Eureka
eureka.client.service-url.defaultZone=http://localhost:9091/eureka/

# Affiche la requete dans la console
spring.jpa.show-sql=false

# Config bdd avec pool hikari
spring.datasource.url=jdbc:postgresql://192.168.99.100:9032/hyl_db?currentSchema=item
spring.datasource.hikari.username=admin_item
spring.datasource.hikari.password=admin_item
spring.datasource.hikari.connection-timeout=2000
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.transaction-isolation=2
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.maximum-pool-size=100

# Contraintes personalisée
hyl.constraint.category.depth=3
hyl.constraint.subitem.max=30
hyl.constraint.subitem.image.maxsize=524288
hyl.constraint.file.name.maxlength=15

# Urls neccessaire pour la gestion des fichiers
hyl.url.localstorage=file:///C:/ProgramData/Hyl/
hyl.url.separator=-
spring.resources.static-locations=classpath:/static/,${hyl.url.localstorage}

# Désactivation de ribbon
spring.cloud.loadbalancer.ribbon.enabled=false

# Evite exception lors de l'envoi d'un bean vide
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Evite log Exception de PgConnection.createClob()<= bug framework
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# End points exposé par spring boot acturator
management.endpoints.web.exposure.include=*

# Informations a faire apparaitre dans l'end point "info"
info.app.version=1.0
info.app.dev=De Abreu Miranda Ayrton

